rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function hasRole(roles) {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in roles;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isTeamMember(teamId) {
      return isAuthenticated() && 
        request.auth.uid in get(/databases/$(database)/documents/teams/$(teamId)).data.members;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && (
        isOwner(userId) || 
        hasRole(['admin', 'super_admin']) ||
        (
          hasRole(['editor']) &&
          ('team' in get(/databases/$(database)/documents/users/$(request.auth.uid)).data &&
           userId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.team)
        )
      );
      allow write: if isAuthenticated() && (
        isOwner(userId) || 
        hasRole(['admin', 'super_admin'])
      );

      match /documents/{documentId} {
        allow read: if isAuthenticated() && (
          isOwner(userId) ||
          hasRole(['admin', 'super_admin'])
        );
        allow write: if isAuthenticated() && (
          isOwner(userId) ||
          hasRole(['admin', 'super_admin'])
        );
      }
    }
    
    // Registration requests
    match /registrationRequests/{requestId} {
      allow create: if isAuthenticated();
      allow read, write: if isAuthenticated() && hasRole(['admin', 'super_admin']);
    }
    
    // Services collection
    match /services/{serviceId} {
      allow read: if true; // Public read access
      allow write: if isAuthenticated() && hasRole(['editor', 'admin', 'super_admin']);
    }
    
    // Content management
    match /content/{contentId} {
      allow read: if true; // Public read access for all content
      allow write: if isAuthenticated() && hasRole(['editor', 'admin', 'super_admin']);
      
      match /versions/{versionId} {
        allow read: if true; // Public read access for content versions
        allow write: if isAuthenticated() && hasRole(['editor', 'admin', 'super_admin']);
      }
    }

    // Teams
    match /teams/{teamId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && hasRole(['admin', 'super_admin']);
    }

    // Notifications
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && 
        request.auth.uid == resource.data.recipientId;
      allow write: if isAuthenticated() && hasRole(['admin', 'super_admin']);
    }

    // Schedules
    match /schedules/{scheduleId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == resource.data.userId ||
        hasRole(['admin', 'super_admin']) ||
        (
          hasRole(['editor']) &&
          ('team' in get(/databases/$(database)/documents/users/$(request.auth.uid)).data &&
           resource.data.userId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.team)
        )
      );
      allow write: if isAuthenticated() && (
        request.auth.uid == resource.data.userId ||
        hasRole(['admin', 'super_admin'])
      );
    }
  }
}